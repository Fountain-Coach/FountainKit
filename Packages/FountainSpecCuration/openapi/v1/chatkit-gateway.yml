---
openapi: 3.1.0
info:
  title: FountainAI ChatKit Gateway
  description: >
    Session bootstrap and message streaming endpoints that allow the
    FountainKit gateway to power ChatKit front-ends.
  version: 0.1.0
  license:
    name: FountainAI Internal
    url: https://fountain.coach/licenses/internal
servers:
  - url: https://gateway.fountain.coach/api
    description: Production gateway
  - url: http://localhost:8010/api
    description: Local development
security: []
paths:
  /chatkit/session:
    post:
      summary: Start ChatKit session
      description: >
        Issues a short-lived client secret that ChatKit uses to authenticate
        subsequent message and upload requests. Persona, user, and metadata
        hints are captured so downstream plugins can personalise prompts and
        storage scopes.
      operationId: startChatKitSession
      tags: [ChatKit Sessions]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitSessionRequest'
      responses:
        '201':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /chatkit/session/refresh:
    post:
      summary: Refresh ChatKit session secret
      description: >
        Rotates the client secret associated with an active session. The
        previous secret becomes invalid immediately after the refresh succeeds.
      operationId: refreshChatKitSession
      tags: [ChatKit Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitSessionRefreshRequest'
      responses:
        '200':
          description: Session secret refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitSessionResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
  /chatkit/messages:
    post:
      summary: Submit chat message
      description: >
        Accepts a batch of conversation messages and forwards them to the
        configured LLM pipeline. When `stream` is true the response is returned
        as an SSE stream; otherwise a JSON response is returned once the model
        completes.
      operationId: postChatKitMessage
      tags: [ChatKit Messages]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitMessageRequest'
      responses:
        '200':
          description: Final response body when streaming is disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitMessageResponse'
        '202':
          description: Streaming response
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/ChatKitStreamEvent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
  /chatkit/upload:
    post:
      summary: Upload attachment
      description: >
        Direct upload endpoint used by ChatKit when attachments are enabled.
        The uploaded file is associated with the provided session. Uploads are
        limited to 25 MB, validated against the configured MIME allow list, and
        expire 24 hours after creation.
      operationId: uploadChatKitAttachment
      tags: [ChatKit Attachments]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatKitUploadRequest'
      responses:
        '201':
          description: Attachment stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitUploadResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          description: Attachment too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /chatkit/attachments/{attachmentId}:
    get:
      summary: Download attachment
      description: >
        Streams the attachment bytes after validating the requesting session and
        verifying the stored metadata (size and checksum).
      operationId: downloadChatKitAttachment
      tags: [ChatKit Attachments]
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: Identifier returned by the upload endpoint.
          schema:
            type: string
        - name: client_secret
          in: query
          required: true
          description: Session secret issued by `/chatkit/session`.
          schema:
            type: string
      responses:
        '200':
          description: Attachment bytes
          headers:
            Cache-Control:
              description: Prevents caching of sensitive attachment payloads.
              schema:
                type: string
                example: no-store
            Content-Disposition:
              description: Suggests a filename when the attachment is downloaded by browsers.
              schema:
                type: string
            ETag:
              description: SHA-256 checksum clients can use to verify attachment integrity.
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Attachment not associated with the supplied session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Attachment not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Metadata integrity check failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /chatkit/threads:
    post:
      summary: Create chat thread
      description: Creates a new chat thread scoped to the authenticated session.
      operationId: createChatKitThread
      tags: [ChatKit Threads]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitThreadCreateRequest'
      responses:
        '201':
          description: Thread created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitThread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      summary: List chat threads
      description: Lists threads associated with the provided session secret. Results are sorted by most recently updated; pagination will follow once thread counts grow beyond small batches.
      operationId: listChatKitThreads
      tags: [ChatKit Threads]
      parameters:
        - name: client_secret
          in: query
          required: true
          description: Session secret issued by `/chatkit/session`.
          schema:
            type: string
      responses:
        '200':
          description: Thread list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitThreadListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /chatkit/threads/{threadId}:
    get:
      summary: Fetch chat thread
      description: Returns stored assistant responses and tool calls for the requested thread.
      operationId: getChatKitThread
      tags: [ChatKit Threads]
      parameters:
        - name: threadId
          in: path
          required: true
          description: Identifier of the thread to fetch.
          schema:
            type: string
        - name: client_secret
          in: query
          required: true
          description: Session secret issued by `/chatkit/session`.
          schema:
            type: string
      responses:
        '200':
          description: Thread payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitThread'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Thread not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete chat thread
      description: Removes the thread and any persisted assistant responses.
      operationId: deleteChatKitThread
      tags: [ChatKit Threads]
      parameters:
        - name: threadId
          in: path
          required: true
          description: Identifier of the thread to delete.
          schema:
            type: string
        - name: client_secret
          in: query
          required: true
          description: Session secret issued by `/chatkit/session`.
          schema:
            type: string
      responses:
        '204':
          description: Thread deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Thread not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  responses:
    BadRequest:
      description: Malformed request payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Authentication failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ChatKitSessionRequest:
      type: object
      description: Optional metadata describing the session being created.
      properties:
        persona:
          type: string
          description: Identifier of the persona or workflow to load.
        userId:
          type: string
          description: Stable identifier for the end user, used for persistence.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Arbitrary metadata echoed back in session events.
    ChatKitSessionResponse:
      type: object
      required: [client_secret, session_id, expires_at]
      properties:
        session_id:
          type: string
          description: Stable identifier for the created session.
        client_secret:
          type: string
          description: Bearer token used to authenticate subsequent requests.
        expires_at:
          type: string
          format: date-time
          description: Expiration timestamp for the current client secret.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Metadata echoed from the request.
    ChatKitSessionRefreshRequest:
      type: object
      required: [client_secret]
      properties:
        client_secret:
          type: string
          description: Previously issued client secret to rotate.
    ChatKitMessageRequest:
      type: object
      required: [client_secret, messages]
      properties:
        client_secret:
          type: string
          description: Active client secret obtained from session start or refresh.
        thread_id:
          type: string
          description: >
            Optional identifier for the conversation thread. When omitted a new
            thread is created implicitly.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitMessage'
          description: Ordered conversation turns including the user prompt.
        stream:
          type: boolean
          default: true
          description: When true the response is streamed over SSE.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Arbitrary key/value metadata forwarded to the agent runtime.
    ChatKitMessage:
      type: object
      required: [role, content]
      properties:
        id:
          type: string
          description: Unique identifier supplied by the client.
        role:
          type: string
          enum: [user, assistant, tool, system]
          description: Role of the message author.
        content:
          type: string
          description: Message body rendered in the conversation.
        created_at:
          type: string
          format: date-time
          description: Creation timestamp supplied by the client.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitAttachment'
          description: File attachments referenced by the message.
    ChatKitAttachment:
      type: object
      required: [id, type]
      properties:
        id:
          type: string
          description: Identifier returned by the upload endpoint.
        type:
          type: string
          enum: [file, image]
          description: Attachment modality.
        name:
          type: string
          description: Original filename.
        mime_type:
          type: string
          description: MIME type supplied during upload.
        size_bytes:
          type: integer
          description: Size of the attachment in bytes.
    ChatKitMessageResponse:
      type: object
      required: [answer, thread_id]
      properties:
        answer:
          type: string
          description: Assistant response text.
        thread_id:
          type: string
          description: Thread identifier associated with the response.
        response_id:
          type: string
          description: Unique identifier of the response.
        created_at:
          type: string
          format: date-time
          description: Response creation timestamp.
        usage:
          type: object
          additionalProperties:
            type: number
          description: Token accounting details.
        provider:
          type: string
          description: Underlying provider used to generate the response.
        model:
          type: string
          description: Model identifier selected by FountainKit.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional metadata returned by the agent runtime.
    ChatKitStreamEvent:
      type: object
      description: Server-sent event emitted while streaming ChatKit responses.
      required:
        - event
      properties:
        id:
          type: string
          description: Stable identifier for the SSE frame. When omitted the client should not expect replay support.
        event:
          type: string
          enum: [delta, completion, error, tool_call, tool_result]
          description: Event type. `delta` frames deliver incremental tokens while `completion` marks the terminal payload. `tool_call` and `tool_result` frames expose function execution metadata.
        delta:
          type: object
          properties:
            content:
              type: string
              description: Incremental assistant output token. Empty strings SHOULD be ignored.
          description: Payload describing the incremental assistant update.
        answer:
          type: string
          description: Final assistant message once streaming completes.
        done:
          type: boolean
        thread_id:
          type: string
        response_id:
          type: string
        created_at:
          type: string
          format: date-time
        provider:
          type: string
          description: Upstream LLM provider name associated with the response.
        model:
          type: string
          description: Identifier of the model that produced the tokens.
        usage:
          type: object
          additionalProperties:
            type: number
          description: Token accounting emitted by the upstream model when available.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional metadata propagated from ChatKit session and request context.
        error:
          $ref: '#/components/schemas/ErrorResponse'
    ChatKitUploadRequest:
      type: object
      required: [client_secret, file]
      properties:
        client_secret:
          type: string
          description: Client secret authorising the upload.
        thread_id:
          type: string
          description: Optional thread identifier to associate with the upload.
        file:
          type: string
          format: binary
          description: File payload.
      description: Multipart form data containing the session secret, optional target thread identifier, and binary attachment contents. Supported MIME types include PNG, JPEG, WEBP, GIF, PDF, plain text, JSON, and generic octet streams.
    ChatKitUploadResponse:
      type: object
      required: [attachment_id]
      properties:
        attachment_id:
          type: string
          description: Identifier used to reference the attachment in messages.
        upload_url:
          type: string
          format: uri
          description: Location from which the attachment can be fetched (e.g. `fountain://chatkit/attachments/<id>`).
        mime_type:
          type: string
          description: MIME type detected for the attachment.
      description: Metadata returned after a successful upload. Attachments expire 24 hours after creation and must be re-uploaded thereafter.
    ChatKitThreadCreateRequest:
      type: object
      required: [client_secret]
      properties:
        client_secret:
          type: string
          description: Session secret issued by `/chatkit/session`.
        title:
          type: string
          description: Optional human readable title for the thread.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Arbitrary metadata stored alongside the thread.
    ChatKitThreadListResponse:
      type: object
      required: [threads]
      properties:
        threads:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitThreadSummary'
          description: Thread summaries ordered by most recent activity.
    ChatKitThreadSummary:
      type: object
      required: [thread_id, session_id, created_at, updated_at, message_count]
      properties:
        thread_id:
          type: string
        session_id:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        message_count:
          type: integer
          minimum: 0
    ChatKitThread:
      type: object
      required: [thread_id, session_id, created_at, updated_at, messages]
      properties:
        thread_id:
          type: string
        session_id:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitThreadMessage'
    ChatKitThreadMessage:
      type: object
      required: [id, role, content, created_at]
      properties:
        id:
          type: string
        role:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitAttachment'
        tool_calls:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitToolCall'
        response_id:
          type: string
        usage:
          type: object
          additionalProperties:
            type: number
    ChatKitToolCall:
      type: object
      required: [id, name, arguments]
      properties:
        id:
          type: string
        name:
          type: string
        arguments:
          type: string
        status:
          type: string
        result:
          type: string
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Human readable error message.
        code:
          type: string
          description: Stable error code for programmatic handling.

# © 2025 Contexter alias Benedikt Eickhoff 🛡️ All rights reserved.
