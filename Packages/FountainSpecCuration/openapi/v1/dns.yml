openapi: 3.1.0
info:
  title: Fountain Internal DNS API
  description: >
    API for managing internal DNS zones and records.
  version: 1.0.0
  x-fountain.port: 8008
  license:
    name: FountainAI Internal
    url: https://fountain.coach/licenses/internal
servers:
  - url: http://dns.local
    description: Local development
  - url: http://dns.fountain.coach
security:
  - ApiKeyAuth: []
paths:
  /zones:
    get:
      summary: List Zones
      operationId: listZones
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      summary: Create Zone
      operationId: createZone
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneCreateRequest'
      responses:
        '201':
          description: Zone Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
        '400':
          $ref: '#/components/responses/BadRequest'
  /zones/{zoneId}:
    parameters:
      - name: zoneId
        in: path
        required: true
        schema:
          type: string
          description: Zone identifier
    delete:
      summary: Delete Zone
      operationId: deleteZone
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '204':
          description: Zone Deleted
        '400':
          $ref: '#/components/responses/BadRequest'
  /zones/{zoneId}/records:
    parameters:
      - name: zoneId
        in: path
        required: true
        schema:
          type: string
          description: Zone identifier
    get:
      summary: List Records
      operationId: listRecords
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      summary: Create Record
      operationId: createRecord
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordRequest'
      responses:
        '201':
          description: Record Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        '400':
          $ref: '#/components/responses/BadRequest'
  /zones/{zoneId}/records/{recordId}:
    parameters:
      - name: zoneId
        in: path
        required: true
        schema:
          type: string
          description: Zone identifier
      - name: recordId
        in: path
        required: true
        schema:
          type: string
          description: Record identifier
    put:
      summary: Update Record
      operationId: updateRecord
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordRequest'
      responses:
        '200':
          description: Record Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      summary: Delete Record
      operationId: deleteRecord
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '204':
          description: Record Deleted
        '400':
          $ref: '#/components/responses/BadRequest'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  responses:
    BadRequest:
      description: Malformed request payload.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required: [error]
  schemas:
    Zone:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          description: Zone identifier
        name:
          type: string
          description: DNS zone name
    ZoneCreateRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
          description: DNS zone name
    ZonesResponse:
      type: object
      required: [zones]
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
    Record:
      type: object
      required: [id, name, type, value]
      properties:
        id:
          type: string
          description: Record identifier
        name:
          type: string
          description: Record name
        type:
          type: string
          enum: [A, AAAA, CNAME, MX, TXT, SRV, CAA]
          description: DNS record type
        value:
          type: string
          description: Record data
    RecordRequest:
      type: object
      required: [name, type, value]
      properties:
        name:
          type: string
          description: Record name
        type:
          type: string
          enum: [A, AAAA, CNAME, MX, TXT, SRV, CAA]
          description: DNS record type
        value:
          type: string
          description: Record data
    RecordsResponse:
      type: object
      required: [records]
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/Record'
    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: string
          description: Description of the error

# ¬© 2025 Contexter alias Benedikt Eickhoff üõ°Ô∏è All rights reserved.
