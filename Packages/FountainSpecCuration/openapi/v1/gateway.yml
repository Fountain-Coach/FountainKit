openapi: 3.1.0
info:
  title: FountainAI Gateway
  description: >
    Swift-based API gateway providing HTTPS termination, routing,
    authentication and metrics for FountainAI services.
  version: 1.0.0
  x-fountain.port: 8010
  x-fountain.binary: fountain-gateway
  license:
    name: FountainAI Internal
    url: https://fountain.coach/licenses/internal
servers:
  - url: http://gateway.local
    description: Local development
  - url: http://gateway.fountain.coach
security:
  - bearerAuth: []
paths:
  /health:
    get:
      summary: Health
      description: Returns 200 if the gateway is running.
      operationId: gatewayHealth
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
  /metrics:
    get:
      summary: Metrics
      description: Endpoint that serves runtime metrics encoded as JSON.
      operationId: gatewayMetrics
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []
  /auth/token:
    post:
      summary: Issue Authentication Token
      description: >
        Verify client credentials and issue a JWT used for accessing
        protected routes.
      operationId: issueAuthToken
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
  /certificates:
    get:
      summary: Certificate Info
      description: Returns metadata about the active TLS certificate.
      operationId: certificateInfo
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []
  /certificates/renew:
    post:
      summary: Trigger certificate renewal
      description: Manually invoke the renewal process for the TLS certificate.
      operationId: renewCertificate
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '202':
          description: Renewal triggered
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []
  /chatkit/session:
    post:
      summary: Start ChatKit session
      description: Issues a short-lived client secret used to authenticate chat requests.
      operationId: startChatKitSession
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: false
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitSessionRequest'
      responses:
        '201':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /chatkit/session/refresh:
    post:
      summary: Refresh ChatKit session secret
      description: Rotates the client secret associated with an active chat session.
      operationId: refreshChatKitSession
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitSessionRefreshRequest'
      responses:
        '200':
          description: Session secret refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chatkit/messages:
    post:
      summary: Submit ChatKit message batch
      description: Accepts conversation messages and forwards them to the LLM pipeline.
      operationId: postChatKitMessage
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatKitMessageRequest'
      responses:
        '200':
          description: Final response when streaming is disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitMessageResponse'
        '202':
          description: Streaming response
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/ChatKitStreamEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /chatkit/upload:
    post:
      summary: Upload attachment for ChatKit
      description: Stores an attachment and returns an identifier for later reference.
      operationId: uploadChatKitAttachment
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: false
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatKitUploadRequest'
      responses:
        '201':
          description: Attachment stored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatKitUploadResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /routes:
    get:
      summary: List Configured Routes
      description: Returns all routing definitions active in the gateway.
      operationId: listRoutes
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RouteInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []
    post:
      summary: Add a new route
      operationId: createRoute
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteInfo'
      responses:
        '201':
          description: Route created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Route already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
  /routes/{routeId}:
    put:
      summary: Update an existing route
      operationId: updateRoute
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      parameters:
        - name: routeId
          in: path
          required: true
          description: Unique identifier for the route
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteInfo'
      responses:
        '200':
          description: Route updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
    delete:
      summary: Delete a route
      operationId: deleteRoute
      x-fountain.visibility: public
      x-fountain.reason: ''
      x-fountain.allow-as-tool: true
      parameters:
        - name: routeId
          in: path
          required: true
          description: Unique identifier for the route
          schema:
            type: string
      responses:
        '204':
          description: Route deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Route not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ChatKitSessionRequest:
      type: object
      properties:
        persona:
          type: string
        userId:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    ChatKitSessionRefreshRequest:
      type: object
      required:
        - client_secret
      properties:
        client_secret:
          type: string
    ChatKitSessionResponse:
      type: object
      required:
        - client_secret
        - session_id
        - expires_at
      properties:
        session_id:
          type: string
        client_secret:
          type: string
        expires_at:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
    ChatKitMessageRequest:
      type: object
      required:
        - client_secret
        - messages
      properties:
        client_secret:
          type: string
        thread_id:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitMessage'
        stream:
          type: boolean
          default: true
        metadata:
          type: object
          additionalProperties:
            type: string
    ChatKitMessage:
      type: object
      required:
        - role
        - content
      properties:
        id:
          type: string
        role:
          type: string
          enum:
            - user
            - assistant
            - tool
            - system
        content:
          type: string
        created_at:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/ChatKitAttachment'
    ChatKitAttachment:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - file
            - image
        name:
          type: string
        mime_type:
          type: string
        size_bytes:
          type: integer
    ChatKitMessageResponse:
      type: object
      required:
        - answer
        - thread_id
      properties:
        answer:
          type: string
        thread_id:
          type: string
        response_id:
          type: string
        created_at:
          type: string
          format: date-time
        usage:
          type: object
          additionalProperties:
            type: number
        provider:
          type: string
        model:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    ChatKitStreamEvent:
      type: object
      properties:
        id:
          type: string
        event:
          type: string
          enum:
            - delta
            - completion
            - error
        delta:
          type: object
          properties:
            content:
              type: string
        answer:
          type: string
        done:
          type: boolean
        thread_id:
          type: string
        response_id:
          type: string
        created_at:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
        error:
          $ref: '#/components/schemas/ErrorResponse'
    ChatKitUploadRequest:
      type: object
      properties:
        client_secret:
          type: string
        thread_id:
          type: string
        file:
          type: string
          format: binary
    ChatKitUploadResponse:
      type: object
      required:
        - attachment_id
      properties:
        attachment_id:
          type: string
        upload_url:
          type: string
          format: uri
          description: Location from which the attachment can be fetched (e.g. `fountain://chatkit/attachments/<id>`).
        mime_type:
          type: string
    CredentialRequest:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          type: string
          description: API client identifier
        clientSecret:
          type: string
          description: API client secret
    TokenResponse:
      type: object
      required:
        - token
        - expiresAt
      properties:
        token:
          type: string
          description: Bearer token for gateway access
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp of the token
    RouteInfo:
      type: object
      required:
        - id
        - path
        - target
        - methods
      properties:
        id:
          type: string
          description: Unique identifier of the route
        path:
          type: string
          description: URL path pattern for matching requests
        target:
          type: string
          description: Upstream service address
        methods:
          type: array
          items:
            type: string
            enum: [GET, POST, PUT, PATCH, DELETE]
          description: HTTP methods forwarded to the upstream
        rateLimit:
          type: integer
          description: Optional maximum requests per minute
        proxyEnabled:
          type: boolean
          description: Indicates if proxying to the upstream is enabled
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Description of the error
    CertificateInfo:
      type: object
      required:
        - notAfter
        - issuer
      properties:
        notAfter:
          type: string
          format: date-time
          description: Expiration date of the certificate
        issuer:
          type: string
          description: Certificate issuer

# © 2025 Contexter alias Benedikt Eickhoff 🛡️ All rights reserved.
