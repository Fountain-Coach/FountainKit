#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<USAGE
Usage:
  $(basename "$0") [--all] [--force]

Stops background FountainKit dev processes started by Scripts/dev/dev-up and the LocalAgent.

Options:
  --all     Also stop optional extras (semantic-browser, tools-factory, tool-server, publishing-frontend)
  --force   Additionally kill any listeners on default dev ports (8001-8012)
USAGE
}

REPO_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")"/../.. && pwd)
PID_DIR="$REPO_ROOT/.fountain/pids"

ALL=0
FORCE=0
for a in "$@"; do
  if [[ "$a" == "--help" || "$a" == "-h" ]]; then
    usage; exit 0
  fi
  if [[ "$a" == "--all" ]]; then ALL=1; fi
  if [[ "$a" == "--force" ]]; then FORCE=1; fi
done

stop_pid() {
  local name="$1"; shift
  local pid_file="$PID_DIR/$name.pid"
  if [[ -f "$pid_file" ]]; then
    local pid
    pid=$(cat "$pid_file" 2>/dev/null || true)
    if [[ -n "${pid:-}" ]] && kill -0 "$pid" 2>/dev/null; then
      echo "[dev-down] Stopping $name (pid $pid)"
      kill "$pid" 2>/dev/null || true
      sleep 0.2
    else
      echo "[dev-down] $name not running; cleaning stale pid file"
    fi
    rm -f "$pid_file"
  fi
}

# Core
for svc in baseline-awareness bootstrap planner function-caller persist midi gateway; do
  stop_pid "$svc"
done

if [[ "$ALL" == "1" ]]; then
  for svc in semantic-browser tools-factory tool-server publishing-frontend; do
    stop_pid "$svc"
  done
fi

echo "[dev-down] Stopping LocalAgent (and mock fallback if present)"
"$REPO_ROOT/Scripts/launcher" stop || true

if [[ "$FORCE" == "1" ]]; then
  if command -v lsof >/dev/null 2>&1; then
    echo "[dev-down] --force: killing listeners on dev ports (8001-8012 + 7180)"
    for port in 8001 8002 8003 8004 8005 7180 8010 8011 8012; do
      pids=$(lsof -t -nP -iTCP:$port -sTCP:LISTEN 2>/dev/null || true)
      if [[ -n "${pids:-}" ]]; then
        echo "$pids" | xargs -I{} sh -c 'echo "  killing pid {} on :$0"; kill {} >/dev/null 2>&1 || true' $port
      fi
    done
  fi
fi

echo "[dev-down] Done."
